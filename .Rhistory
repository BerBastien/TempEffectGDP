#install required packages
#install.packages("stringr")
install.packages("raster")
install.packages("Hmisc")
install.packages("tiff")
install.packages("sf")
install.packages("janitor")
install.packages("osmdata")
install.packages("DataExplorer")
install.packages("xlsx")
install.packages("rJava")
install.packages("zip.file.extract")
install.packages("rworldmap")
install.packages("maptools")
install.packages("rgeos")
install.packages("cleangeo")
install.packages("RSAGA")
install.packages("geonames")
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages("plm")
install.packages("lmtest")
install.packages("moderndive")
install.packages("jtools")
install.packages("ggstance")
install.packages("mutate_geocode")
install.packages("ggmap")
install.packages("randomForestExplainer")
install.packages(c("chron","RColorBrewer","lattice","ncdf4"))
install.packages("tmap")
install.packages("ggalluvial")
install.packages("corrplot")
library(ggplot2)
library(GGally)
library(chron)
library(corrplot)
library(Hmisc)
library(sf)
library(tiff)
library(ggalluvial)
library(RColorBrewer)
library(lattice)
library(ncdf4)
library("metafor")
library("osmdata")
library("tmap")
library("rJava")
library("RSAGA")
library("geonames")
library("dplyr")
library("ggplot2")
library("sp")
library("measurements")
library("stringr")
library("readxl")
library("janitor")
library("DataExplorer")
library("ggplot2")
library("xlsx")
library("tidyverse")
library(randomForestExplainer)
library(randomForest)
library(rworldmap)
library(maps)
library(rgeos)
library(maptools)
library(cleangeo)
library("rnaturalearth")
library("rnaturalearthdata")
library("ggpubr")
library(plm)
library(moderndive)
library(lmtest)
library(jtools)
library(ggstance)
library(ggmap)
library(raster)
#load libraries (end)
library(ggplot2)
install.packages("scales")
library(ggplot2)
#load libraries
library(scales)
#load libraries
library("scales")
3+3
library("scales")
library(ggplot2)
library(GGally)
library(chron)
library(corrplot)
library(Hmisc)
library(sf)
library(tiff)
library(ggalluvial)
library(RColorBrewer)
library(lattice)
library(ncdf4)
library("metafor")
library("osmdata")
library("tmap")
library("rJava")
Bastien-Olvera, B. A. and Moore, F. C.
# ## Index
#     # 1. Setup
#     # 2. Simulation (Figure 1 and 2)
#         # 2.1 Temperature fluctuations and filters - Figure 1
#         # 2.2 Global temperature simulation
#         # 2.3. Perform simulation - Figure 2
#     # 3. Empirical analysis (Figure 3 and Table 1)
#         # 3.1 Country-level regressions
#         # 3.2. Categorizing - Figure 3
#         # 3.3. FELM abs estimate by filter - Table 1, columns 1 and 2
#         # 3.4. Mean effect accross filters and socioeconomic variables; Supp Fig 1 and 2
#         # 3.5. Other datasets - Table 1, columns 3 to 6; Supp Fig 3
## 1. Setup (start)
#set working directory
dir <- "C:/Users/bastien/Documents/GitHub/TempEffectGDP/"
setwd(dir)
x<-c("TTR", "ggpubr","mFilter", "ncdf4","TSA","tidyverse","ggplot2",
"ggpubr","dplR","reshape2","raster","dplyr",
"RColorBrewer","colorspace","spData","sf","countrycode", "ggstatsplot",
"ggsignif","dlnm","lfe","directlabels","splines","timeSeries",
"MASS","stargazer","jtools","wbstats","dplR")
lapply(x, require, character.only = TRUE)
# some functions
tsyears <- function(ts) as.numeric(trunc(time(ts)))
cols <- c("#38170B","#BF1B0B", "#FFC465", "#66ADE5", "#252A52")
cols=rev(c("#76d3ae","#0dcfca","#055692"))
#Load data
barro <- read.csv(paste(dir,"Data/Barro_UDel.csv",sep=""))
mad <- read.csv(paste(dir,"Data/Maddison_UDel.csv",sep=""))
wb <- read.csv(paste(dir,"Data/WB_UDel.csv",sep=""))
countries <- unique(factor(wb$countrycode))
## 1. Setup (end)
## 2. Simulation - Figures 1 and 2 (start)
## 2.1. Temperature fluctuations and filters - Figure 1 (start)
wbUS <- wb[wb$countrycode=="USA",]
mt <- lm(UDel_pop_temp~year, data = wbUS)
t <- resid(mt)
t <- interpNA(t, method = "linear")
t <- removeNA(t)
tdf <- data.frame(year = mt$model[,2], temp= t+1.8, Filter = "Unfiltered", mean = 1.8)
t3 <- pass.filt(t, W=3, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t3+1, Filter = "2-3 years", mean = 1))
t5 <- pass.filt(t, W=5, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t5+0.5, Filter = "2-5 years", mean = 0.5))
t10 <- pass.filt(t, W=10, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t10+0.25, Filter = "2-10 years", mean = 0.25))
t15 <- pass.filt(t, W=15, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t15+0.1, Filter = "2-15 years", mean = 0.1))
tdf$Filter <- factor(tdf$Filter, levels = c("Unfiltered", "2-3 years", "2-5 years","2-10 years","2-15 years"))
ggplot(data=tdf, aes(x=year, y=temp, color = Filter))+geom_line()+theme_bw()+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.border = element_blank(),plot.title = element_text(hjust = 0.5))+
geom_errorbar(aes(x=1958,ymin=1,ymax=2), color = "black")+
geom_text(aes(x=1960,y=1.5),label="1C", color="black")+
#geom_dl(aes(label = Filter), method = list(dl.combine("last.points")), cex = 0.9) +
xlim(1958,2018)+ ggtitle("United States temperature fluctuation")+ labs(color= "Filtered oscillations \n (periods)")+
geom_line(data = tdf, aes(x=year, y =mean, color = Filter))
## 2.1 Temperature fluctuations and filters - Figure 1 (end)
## 2.2. Global temperature simulation (start)
file=nc_open(paste(dir,"Data/gmt_MCruns_ensemble_full.nc",sep=""))
# Uncomment for US temp profile (end)
#file=nc_open(paste(dir,"Data/air_MCruns_ensemble_mean_LMRv2.0.nc",sep=""))
#gtemp=ncvar_get(file,"air",start=c(1,1,1,1),count=c(-1,-1,1,-1))
#lon <- ncvar_get(file,"lon")
#lat <- ncvar_get(file,"lat")
#time <- ncvar_get(file,"time")
#tunits <- ncatt_get(file,"time","units")
#data(world)
#geom_iso <- world$geom[world$iso_a2=="US"]
#geom_iso <- st_shift_longitude(geom_iso)
#geom_iso <- st_cast(geom_iso, "POLYGON")
#geom_iso <-as_Spatial(geom_iso)
#gtemp <- brick(gtemp, xmn=min(lat), xmx=max(lat), ymn=min(lon), ymx=max(lon), crs=CRS("+proj=longlat +datum=WGS84 +no_defs"))
#ustemp_lmr <- rep(NA,1500)
#for (i in 1:1500){
#    gtemp_year <- raster::subset(gtemp,i)
#   #gtemp_year <- rotate(gtemp_year)
#  gtemp_year <- t(gtemp_year)
# ustemp <- extract(gtemp_year, geom_iso,method='simple')
#ustemp_lmr[i] <- mean(ustemp[[1]])
#}
#print(file)
#ustemp_lmr_orig <- ustemp_lmr
#ustemp_lmr=lm(ustemp_lmr_orig~x)$residuals
#p=periodogram(ustemp_lmr)
# Uncomment for US temp profile (end)
gtemp=ncvar_get(file,"gmt")
gtemp=apply(gtemp,MARGIN=3,FUN=mean)
#take first 1500 years, prior to anthropogenic influence
#gtemp=gtemp[1:1500]
#take out linear time trend
x=1:1500
gtemp=lm(gtemp~x)$residuals
p=periodogram(gtemp)
dd=data.frame(freq=p$freq,spec=p$spec)
dd=dd[order(-dd$spec),]
#look at top 50 frequencies
dd=dd[1:50,]
dd$period=1/dd$freq
#create randomized time series
randomts=function(timeseries){
#returns a time series with the same spectral profile as the argument, but with randomly chosen phases
ft=fft(timeseries)
N=length(timeseries)
rphase=runif(N,min=0,max=360)
newft=complex(real=abs(ft)*cos(rphase),imaginary=abs(ft)*sin(rphase))
return(fft(newft,inverse=T)/N)
}
## 2.2. Global temperature (end)
Bastien-Olvera, B. A. and Moore, F. C.
# ## Index
#     # 1. Setup
#     # 2. Simulation (Figure 1 and 2)
#         # 2.1 Temperature fluctuations and filters - Figure 1
#         # 2.2 Global temperature simulation
#         # 2.3. Perform simulation - Figure 2
#     # 3. Empirical analysis (Figure 3 and Table 1)
#         # 3.1 Country-level regressions
#         # 3.2. Categorizing - Figure 3
#         # 3.3. FELM abs estimate by filter - Table 1, columns 1 and 2
#         # 3.4. Mean effect accross filters and socioeconomic variables; Supp Fig 1 and 2
#         # 3.5. Other datasets - Table 1, columns 3 to 6; Supp Fig 3
## 1. Setup (start)
#set working directory
dir <- "C:/Users/bastien/Documents/GitHub/TempEffectGDP/"
setwd(dir)
x<-c("TTR", "ggpubr","mFilter", "ncdf4","TSA","tidyverse","ggplot2",
"ggpubr","dplR","reshape2","raster","dplyr",
"RColorBrewer","colorspace","spData","sf","countrycode", "ggstatsplot",
"ggsignif","dlnm","lfe","directlabels","splines","timeSeries",
"MASS","stargazer","jtools","wbstats","dplR")
lapply(x, require, character.only = TRUE)
# some functions
tsyears <- function(ts) as.numeric(trunc(time(ts)))
cols <- c("#38170B","#BF1B0B", "#FFC465", "#66ADE5", "#252A52")
cols=rev(c("#76d3ae","#0dcfca","#055692"))
#Load data
barro <- read.csv(paste(dir,"Data/Barro_UDel.csv",sep=""))
mad <- read.csv(paste(dir,"Data/Maddison_UDel.csv",sep=""))
wb <- read.csv(paste(dir,"Data/WB_UDel.csv",sep=""))
countries <- unique(factor(wb$countrycode))
## 1. Setup (end)
## 2. Simulation - Figures 1 and 2 (start)
## 2.1. Temperature fluctuations and filters - Figure 1 (start)
wbUS <- wb[wb$countrycode=="USA",]
mt <- lm(UDel_pop_temp~year, data = wbUS)
t <- resid(mt)
t <- interpNA(t, method = "linear")
t <- removeNA(t)
tdf <- data.frame(year = mt$model[,2], temp= t+1.8, Filter = "Unfiltered", mean = 1.8)
t3 <- pass.filt(t, W=3, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t3+1, Filter = "2-3 years", mean = 1))
t5 <- pass.filt(t, W=5, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t5+0.5, Filter = "2-5 years", mean = 0.5))
t10 <- pass.filt(t, W=10, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t10+0.25, Filter = "2-10 years", mean = 0.25))
t15 <- pass.filt(t, W=15, type="low", method="Butterworth")
tdf <- rbind(tdf,data.frame(year = mt$model[,2], temp= t15+0.1, Filter = "2-15 years", mean = 0.1))
tdf$Filter <- factor(tdf$Filter, levels = c("Unfiltered", "2-3 years", "2-5 years","2-10 years","2-15 years"))
ggplot(data=tdf, aes(x=year, y=temp, color = Filter))+geom_line()+theme_bw()+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.border = element_blank(),plot.title = element_text(hjust = 0.5))+
geom_errorbar(aes(x=1958,ymin=1,ymax=2), color = "black")+
geom_text(aes(x=1960,y=1.5),label="1C", color="black")+
#geom_dl(aes(label = Filter), method = list(dl.combine("last.points")), cex = 0.9) +
xlim(1958,2018)+ ggtitle("United States temperature fluctuation")+ labs(color= "Filtered oscillations \n (periods)")+
geom_line(data = tdf, aes(x=year, y =mean, color = Filter))
## 2.1 Temperature fluctuations and filters - Figure 1 (end)
## 2.2. Global temperature simulation (start)
file=nc_open(paste(dir,"Data/gmt_MCruns_ensemble_full.nc",sep=""))
# Uncomment for US temp profile (end)
#file=nc_open(paste(dir,"Data/air_MCruns_ensemble_mean_LMRv2.0.nc",sep=""))
#gtemp=ncvar_get(file,"air",start=c(1,1,1,1),count=c(-1,-1,1,-1))
#lon <- ncvar_get(file,"lon")
#lat <- ncvar_get(file,"lat")
#time <- ncvar_get(file,"time")
#tunits <- ncatt_get(file,"time","units")
#data(world)
#geom_iso <- world$geom[world$iso_a2=="US"]
#geom_iso <- st_shift_longitude(geom_iso)
#geom_iso <- st_cast(geom_iso, "POLYGON")
#geom_iso <-as_Spatial(geom_iso)
#gtemp <- brick(gtemp, xmn=min(lat), xmx=max(lat), ymn=min(lon), ymx=max(lon), crs=CRS("+proj=longlat +datum=WGS84 +no_defs"))
#ustemp_lmr <- rep(NA,1500)
#for (i in 1:1500){
#    gtemp_year <- raster::subset(gtemp,i)
#   #gtemp_year <- rotate(gtemp_year)
#  gtemp_year <- t(gtemp_year)
# ustemp <- extract(gtemp_year, geom_iso,method='simple')
#ustemp_lmr[i] <- mean(ustemp[[1]])
#}
#print(file)
#ustemp_lmr_orig <- ustemp_lmr
#ustemp_lmr=lm(ustemp_lmr_orig~x)$residuals
#p=periodogram(ustemp_lmr)
# Uncomment for US temp profile (end)
gtemp=ncvar_get(file,"gmt")
gtemp=apply(gtemp,MARGIN=3,FUN=mean)
#take first 1500 years, prior to anthropogenic influence
#gtemp=gtemp[1:1500]
#take out linear time trend
x=1:1500
gtemp=lm(gtemp~x)$residuals
p=periodogram(gtemp)
dd=data.frame(freq=p$freq,spec=p$spec)
dd=dd[order(-dd$spec),]
#look at top 50 frequencies
dd=dd[1:50,]
dd$period=1/dd$freq
#create randomized time series
randomts=function(timeseries){
#returns a time series with the same spectral profile as the argument, but with randomly chosen phases
ft=fft(timeseries)
N=length(timeseries)
rphase=runif(N,min=0,max=360)
newft=complex(real=abs(ft)*cos(rphase),imaginary=abs(ft)*sin(rphase))
return(fft(newft,inverse=T)/N)
}
## 2.2. Global temperature (end)
## 1. Setup (start)
#set working directory
dir <- "C:/Users/bastien/Documents/GitHub/TempEffectGDP/"
setwd(dir)
x<-c("TTR", "ggpubr","mFilter", "ncdf4","TSA","tidyverse","ggplot2",
"ggpubr","dplR","reshape2","raster","dplyr",
"RColorBrewer","colorspace","spData","sf","countrycode", "ggstatsplot",
"ggsignif","dlnm","lfe","directlabels","splines","timeSeries",
"MASS","stargazer","jtools","wbstats","dplR")
lapply(x, require, character.only = TRUE)
# some functions
tsyears <- function(ts) as.numeric(trunc(time(ts)))
cols <- c("#38170B","#BF1B0B", "#FFC465", "#66ADE5", "#252A52")
cols=rev(c("#76d3ae","#0dcfca","#055692"))
#Load data
barro <- read.csv(paste(dir,"Data/Barro_UDel.csv",sep=""))
mad <- read.csv(paste(dir,"Data/Maddison_UDel.csv",sep=""))
wb <- read.csv(paste(dir,"Data/WB_UDel.csv",sep=""))
countries <- unique(factor(wb$countrycode))
wbUS <- wb[wb$countrycode=="USA",]
mt <- lm(UDel_pop_temp~year, data = wbUS)
t <- resid(mt)
t <- interpNA(t, method = "linear")
t <- removeNA(t)
tdf <- data.frame(year = mt$model[,2], temp= t+1.8, Filter = "Unfiltered", mean = 1.8)
t3 <- pass.filt(t, W=3, type="low", method="Butterworth")
lapply(x, require, character.only = TRUE)
library('dplR')
install.packages('dplR')
